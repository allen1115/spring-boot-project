<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.StudentAttendanceMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.StudentAttendance">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_code" jdbcType="VARCHAR" property="courseCode" />
    <result column="attended" jdbcType="BIGINT" property="attended" />
    <result column="explained_absence" jdbcType="BIGINT" property="explainedAbsence" />
    <result column="sessions" jdbcType="BIGINT" property="sessions" />
    <result column="attendance" jdbcType="DOUBLE" property="attendance" />
    <result column="term" jdbcType="VARCHAR" property="term" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, course_name, course_code, attended, explained_absence, sessions, 
    attendance, term
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_attendance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student_attendance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.StudentAttendance">
    insert into student_attendance (id, student_id, course_name, 
      course_code, attended, explained_absence, 
      sessions, attendance, term
      )
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR}, 
      #{courseCode,jdbcType=VARCHAR}, #{attended,jdbcType=BIGINT}, #{explainedAbsence,jdbcType=BIGINT}, 
      #{sessions,jdbcType=BIGINT}, #{attendance,jdbcType=DOUBLE}, #{term,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.StudentAttendance">
    insert into student_attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="attended != null">
        attended,
      </if>
      <if test="explainedAbsence != null">
        explained_absence,
      </if>
      <if test="sessions != null">
        sessions,
      </if>
      <if test="attendance != null">
        attendance,
      </if>
      <if test="term != null">
        term,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="attended != null">
        #{attended,jdbcType=BIGINT},
      </if>
      <if test="explainedAbsence != null">
        #{explainedAbsence,jdbcType=BIGINT},
      </if>
      <if test="sessions != null">
        #{sessions,jdbcType=BIGINT},
      </if>
      <if test="attendance != null">
        #{attendance,jdbcType=DOUBLE},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.StudentAttendance">
    update student_attendance
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="attended != null">
        attended = #{attended,jdbcType=BIGINT},
      </if>
      <if test="explainedAbsence != null">
        explained_absence = #{explainedAbsence,jdbcType=BIGINT},
      </if>
      <if test="sessions != null">
        sessions = #{sessions,jdbcType=BIGINT},
      </if>
      <if test="attendance != null">
        attendance = #{attendance,jdbcType=DOUBLE},
      </if>
      <if test="term != null">
        term = #{term,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.StudentAttendance">
    update student_attendance
    set student_id = #{studentId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_code = #{courseCode,jdbcType=VARCHAR},
      attended = #{attended,jdbcType=BIGINT},
      explained_absence = #{explainedAbsence,jdbcType=BIGINT},
      sessions = #{sessions,jdbcType=BIGINT},
      attendance = #{attendance,jdbcType=DOUBLE},
      term = #{term,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>