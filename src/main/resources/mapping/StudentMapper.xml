<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="program" jdbcType="VARCHAR" property="program" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="email_log_id" jdbcType="VARCHAR" property="emailLogId" />
    <result column="year_of_program" jdbcType="INTEGER" property="yearOfProgram" />
    <result column="avg_attendance" jdbcType="DOUBLE" property="avgAttendance" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="tier_4" jdbcType="VARCHAR" property="tier_4" />
    <result column="note" jdbcType="VARCHAR" property="note" />
</resultMap>
  <sql id="Base_Column_List">
    id, email, name, program, status, year_of_program, avg_attendance, email_log_id, tier_4, flag, note
  </sql>
  <select id="selectAllUsersWithNullEmailId" resultMap="BaseResultMap">
    select * from student where email_log_id is null
  </select>
  <select id="selectAllStudents" resultMap="BaseResultMap">
    select * from student
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectStudentByEmailLogId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from student
    where email_log_id = #{emailLogId,jdbcType=VARCHAR}
  </select>
  <select id="findStudentByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="findStudentByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Student">
    insert into student (id, email, name, 
      program, status, year_of_program
      )
    values (#{id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{program,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{yearOfProgram,jdbcType=INTEGER}, #{avg_attendance, jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="program != null">
        program,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="yearOfProgram != null">
        year_of_program,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="program != null">
        #{program,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="yearOfProgram != null">
        #{yearOfProgram,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Student">
    update student
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="program != null">
        program = #{program,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="yearOfProgram != null">
        year_of_program = #{yearOfProgram,jdbcType=INTEGER},
      </if>
      <if test="emailLogId != null">
        email_log_id = #{emailLogId,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Student">
    update student
    set email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      program = #{program,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      year_of_program = #{yearOfProgram,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateAvgAttendance">
    UPDATE student
    set avg_attendance = #{avgAttendance}
    where id = #{id}
  </update>
  <update id="markAsRedById">
    UPDATE student
    set flag = 'red'
    where id = #{id}
  </update>
  <update id="markAsBlueById">
    UPDATE student
    set flag = 'blue'
    where id = #{id}
  </update>
</mapper>